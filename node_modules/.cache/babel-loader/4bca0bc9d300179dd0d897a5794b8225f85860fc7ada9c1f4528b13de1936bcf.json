{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win10\\\\Desktop\\\\Projects\\\\Websites\\\\2-Elimicioni-Test\\\\src\\\\components\\\\Layout\\\\ItemList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Items from './Items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  const storeData = useSelector(state => state.data.storeData);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  async function fetchData() {\n    try {\n      const result = await Promise.resolve(storeData);\n      if (Array.isArray(result)) {\n        setData(result);\n      } else {\n        throw new Error('Invalid data format');\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(Items, {\n          title: item.title,\n          price: item.price,\n          brand: item.brand\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemList, \"giFuSesUEb6fu9SyV3D2IjecD6o=\", false, function () {\n  return [useSelector];\n});\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","useSelector","Items","jsxDEV","_jsxDEV","ItemList","_s","storeData","state","data","setData","isLoading","setIsLoading","fetchData","result","Promise","resolve","Array","isArray","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","title","price","brand","id","_c","$RefreshReg$"],"sources":["C:/Users/Win10/Desktop/Projects/Websites/2-Elimicioni-Test/src/components/Layout/ItemList.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Items from './Items';\r\n\r\nconst ItemList = () => {\r\n  const storeData = useSelector(state => state.data.storeData);\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    try {\r\n      \r\n\r\n      const result = await Promise.resolve(storeData);\r\n      if (Array.isArray(result)) {\r\n        setData(result);\r\n      } else {\r\n        throw new Error('Invalid data format');\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <ul>\r\n            {data.map(item => (\r\n              <Items\r\n                key={item.id}\r\n                title={item.title}\r\n                price={item.price}\r\n                brand={item.brand}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACF,SAAS,CAAC;EAC5D,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeA,SAASA,CAAA,EAAG;IACzB,IAAI;MAGF,MAAMC,MAAM,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACT,SAAS,CAAC;MAC/C,IAAIU,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;QACzBJ,OAAO,CAACI,MAAM,CAAC;MACjB,CAAC,MAAM;QACL,MAAM,IAAIK,KAAK,CAAC,qBAAqB,CAAC;MACxC;MACAP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,oBACER,OAAA,CAACN,QAAQ;IAAAwB,QAAA,eACPlB,OAAA;MAAAkB,QAAA,EACGX,SAAS,gBACRP,OAAA;QAAAkB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjBtB,OAAA;QAAAkB,QAAA,EACGb,IAAI,CAACkB,GAAG,CAACC,IAAI,iBACZxB,OAAA,CAACF,KAAK;UAEJ2B,KAAK,EAAED,IAAI,CAACC,KAAM;UAClBC,KAAK,EAAEF,IAAI,CAACE,KAAM;UAClBC,KAAK,EAAEH,IAAI,CAACG;QAAM,GAHbH,IAAI,CAACI,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf,CAAC;AAACpB,EAAA,CA9CID,QAAQ;EAAA,QACMJ,WAAW;AAAA;AAAAgC,EAAA,GADzB5B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}